Description: >
    Tamjid Ahmed.
    This cloudformation template creates and deployes all the necessary
    network infrastructure required for Udagram project.

Parameters:
    EnvironmentName:
        Description: Prefix for all resources for Udagram
        Type: String

    VpcCIDR:
        Description: IP range for this vpc
        Type: String
        Default: 10.0.0.0/16

    PublicSubnet1CIDR:
        Description: IP range for public subnet 1
        Type: String
        Default: 10.0.0.0/24

    PublicSubnet2CIDR:
        Description: IP range for public subnet 2
        Type: String
        Default: 10.0.1.0/24

    PrivateSubnet1CIDR:
        Description: IP range for private subnet 1
        Type: String
        Default: 10.0.2.0/24

    PrivateSubnet2CIDR:
        Description: IP range for public subnet 2
        Type: String
        Default: 10.0.3.0/24

Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsSupport: true
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName

    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: keyname
                  Value: !Ref EnvironmentName
    AttachGateway:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: !Ref VPC
            InternetGatewayId: !Ref InternetGateway

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Select [0, !GetAZs ""]
            VpcId: !Ref VPC
            CidrBlock: !Ref PublicSubnet1CIDR
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ0)

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Select [1, !GetAZs ""]
            VpcId: !Ref VPC
            CidrBlock: !Ref PublicSubnet2CIDR
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Select [0, !GetAZs ""]
            VpcId: !Ref VPC
            CidrBlock: !Ref PrivateSubnet1CIDR
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ0)

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Select [1, !GetAZs ""]
            VpcId: !Ref VPC
            CidrBlock: !Ref PrivateSubnet2CIDR
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

    EIPNatGateway1:
        Type: AWS::EC2::EIP
        DependsOn: AttachGateway
        Properties:
            Domain: vpc

    EIPNatGateway2:
        Type: AWS::EC2::EIP
        DependsOn: AttachGateway
        Properties:
            Domain: vpc

    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt EIPNatGateway1.AllocationId
            SubnetId: !Ref PublicSubnet1

    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt EIPNatGateway2.AllocationId
            SubnetId: !Ref PublicSubnet2

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Routes

    DefaultPublicRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnet1
            RouteTableId: !Ref PublicRouteTable

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnet2
            RouteTableId: !Ref PublicRouteTable

    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Routes (AZ0)

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private Routes (AZ1)

    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2

Outputs:
    VPC:
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
            Name: !Sub ${EnvironmentName}-VPCID

    VPCPublicRouteTable:
        Description: Public Routing
        Value: !Ref PublicRouteTable
        Export:
            Name: !Sub ${EnvironmentName}-PUB-RT

    VPCPrivateRouteTable1:
        Description: Private Routing AZ1
        Value: !Ref PrivateRouteTable1
        Export:
            Name: !Sub ${EnvironmentName}-PRI1-RT

    VPCPrivateRouteTable2:
        Description: Private Routing AZ2
        Value: !Ref PrivateRouteTable2
        Export:
            Name: !Sub ${EnvironmentName}-PRI2-RT

    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
        Export:
            Name: !Sub ${EnvironmentName}-PUB-NETS

    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
        Export:
            Name: !Sub ${EnvironmentName}-PRIV-NETS

